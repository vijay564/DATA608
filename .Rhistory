ggplot(data=cdc1[cdc1$icd_chapter == SelectedCause,]
, aes(x = State, y = crude_rate)) +
labs(x="State", y="Crude Death Rate",
title = "Crude death rate per 100,000 persons",
subtitle = paste("Caused by", SelectedCause)) +
geom_bar(stat="identity", fill="steelblue") +
geom_hline(aes(yintercept = mean(crude_rate, na.rm = TRUE), linetype = "National Average"), col="red", lwd=1) +
scale_linetype(name = NULL) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
library(DataExplorer)
remove.packages("DataExplorer", lib="~/R/win-library/3.6")
install.packages("DataExplorer")
install.packages(c("backports", "BH", "bit", "blob", "broom", "callr", "car", "caTools", "chron", "cli", "DBI", "devtools", "digest", "dplyr", "DT", "fansi", "farver", "forcats", "gh", "gplots", "gss", "hms", "jsonlite", "knitr", "lpSolve", "manipulateWidget", "Matrix", "mime", "mnormt", "modelr", "multcomp", "mvtnorm", "nloptr", "pbkrtest", "pillar", "pracma", "prettyunits", "processx", "ps", "psych", "quantreg", "R.methodsS3", "Rcpp", "RcppProgress", "RCurl", "remotes", "rgl", "rlang", "rmarkdown", "rsconnect", "RSQLite", "rstudioapi", "scales", "sp", "SparseM", "stringi", "testthat", "tidyr", "tidyselect", "timeSeries", "tinytex", "vctrs", "xfun", "XML", "yaml", "zoo"))
install.packages(c("backports", "BH", "bit", "blob", "broom", "callr", "car", "caTools", "chron", "cli", "DBI", "devtools", "digest", "dplyr", "DT", "fansi", "farver", "forcats", "gh", "gplots", "gss", "hms", "jsonlite", "knitr", "lpSolve", "manipulateWidget", "Matrix", "mime", "mnormt", "modelr", "multcomp", "mvtnorm", "nloptr", "pbkrtest", "pillar", "pracma", "prettyunits", "processx", "ps", "psych", "quantreg", "R.methodsS3", "Rcpp", "RcppProgress", "RCurl", "remotes", "rgl", "rlang", "rmarkdown", "rsconnect", "RSQLite", "rstudioapi", "scales", "sp", "SparseM", "stringi", "testthat", "tidyr", "tidyselect", "timeSeries", "tinytex", "vctrs", "xfun", "XML", "yaml", "zoo"))
install.packages(c("backports", "BH", "bit", "blob", "broom", "callr", "car", "caTools", "chron", "cli", "DBI", "devtools", "digest", "dplyr", "DT", "fansi", "farver", "forcats", "gh", "gplots", "gss", "hms", "jsonlite", "knitr", "lpSolve", "manipulateWidget", "Matrix", "mime", "mnormt", "modelr", "multcomp", "mvtnorm", "nloptr", "pbkrtest", "pillar", "pracma", "prettyunits", "processx", "ps", "psych", "quantreg", "R.methodsS3", "Rcpp", "RcppProgress", "RCurl", "remotes", "rgl", "rlang", "rmarkdown", "rsconnect", "RSQLite", "rstudioapi", "scales", "sp", "SparseM", "stringi", "testthat", "tidyr", "tidyselect", "timeSeries", "tinytex", "vctrs", "xfun", "XML", "yaml", "zoo"))
install.packages(c("backports", "BH", "bit", "blob", "broom", "callr", "car", "caTools", "chron", "cli", "DBI", "devtools", "digest", "dplyr", "DT", "fansi", "farver", "forcats", "gh", "gplots", "gss", "hms", "jsonlite", "knitr", "lpSolve", "manipulateWidget", "Matrix", "mime", "mnormt", "modelr", "multcomp", "mvtnorm", "nloptr", "pbkrtest", "pillar", "pracma", "prettyunits", "processx", "ps", "psych", "quantreg", "R.methodsS3", "Rcpp", "RcppProgress", "RCurl", "remotes", "rgl", "rlang", "rmarkdown", "rsconnect", "RSQLite", "rstudioapi", "scales", "sp", "SparseM", "stringi", "testthat", "tidyr", "tidyselect", "timeSeries", "tinytex", "vctrs", "xfun", "XML", "yaml", "zoo"))
library(DataExplorer)
remove.packages("DataExplorer", lib="~/R/win-library/3.6")
install.packages("DataExplorer")
library(DataExplorer)
ui <- fluidPage(
sidebarPanel(
selectInput(inputId = "CauseDeath", label = "Cause of Death:",
choices = levels(as.factor(cdc1$icd_chapter))
),
helpText("States by crude mortality for each cause of death."),
width = "auto"
),
plotOutput("plot1")
)
server<- function(input, output) {
output$plot1 <-renderPlot({
SelectedCause <- input$CauseDeath
ggplot(data=cdc1[cdc1$icd_chapter == SelectedCause,]
, aes(x = State, y = crude_rate)) +
labs(x="State", y="Crude Death Rate",
title = "Crude death rate per 100,000 persons",
subtitle = paste("Caused by", SelectedCause)) +
geom_bar(stat="identity", fill="steelblue") +
geom_hline(aes(yintercept = mean(crude_rate, na.rm = TRUE), linetype = "National Average"), col="red", lwd=1) +
scale_linetype(name = NULL) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
#deployApp()
library(shiny)
ui <- fluidPage(
sidebarPanel(
selectInput(inputId = "CauseDeath", label = "Cause of Death:",
choices = levels(as.factor(cdc2$ICD.Chapter))
),
selectInput(inputId = "State", label = "State selected:",
choices = levels(as.factor(cdc2$State))
),
helpText("Annual Crude mortality rates at State level."),
width = "auto"
),
plotOutput("plot2")
)
server<- function(input, output) {
output$plot2 <-renderPlot({
SelectedCause <- input$CauseDeath
SelectedState <- input$State
ggplot(cdc2[cdc2$State == SelectedState & cdc2$ICD.Chapter == SelectedCause,]) +
geom_bar(aes(x = Year, weight = S.Crude.Rate), fill = "steelblue") +
labs(x="State", y = "Crude Death Rate",
title = "Crude death rate per 100,000 persons",
subtitle = paste("Caused by", SelectedCause, "in", SelectedState)) +
geom_line(aes(x = Year, y = N.Crude.Rate, linetype = "National Average"), col = "red", lwd = 1) +
scale_linetype(name = NULL) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
cdc2 <- cdc %>%
group_by(Year, ICD.Chapter) %>%
mutate(N.Population = sum(Population),
N.Count = sum(Deaths),
N.Crude.Rate = 10^5*(N.Count/N.Population)) %>%
group_by(Year, ICD.Chapter, State) %>%
mutate(S.Count=sum(Deaths),
S.Crude.Rate=10^5*(S.Count/Population)) %>%
select(ICD.Chapter, State, Year, N.Crude.Rate, S.Crude.Rate)
cdc2b<-sqldf("select
'ICD.Chapter' as icd_chapter,
State as state,
Year as year,
'N.Crude.Rate' as national_crude_rate,
'S.Crude.Rate' as state_crude_rate
from cdc2")
head(cdc2b,10);
ggplot(data=cdc2b, aes(x=year, y=state_crude_rate)) +
labs(x="Year", y="Crude Death Rate per 100,000 Person") +
geom_bar(stat="identity", fill="steelblue") +
geom_line(aes(x=year, y=national_crude_rate), col="red", lwd=1)
library(shiny)
library(dplyr)
library(tidyr)
library(ggplot2)
library(tibble)
cdc_url <- "https://raw.githubusercontent.com/charleyferrari/CUNY_DATA608/master/lecture3/data/cleaned-cdc-mortality-1999-2010-2.csv"
cdc <- read.csv(cdc_url, header= TRUE, stringsAsFactors=TRUE)
#change population back into a numeric
cdc$Population <- as.numeric(cdc$Population)
# summarizing data
head(cdc)
summary(cdc)
library(sqldf)
library(ggplot2)
library(rsconnect)
cdc1<-sqldf("
select
icd_chapter, State, crude_rate
from
(
select
`ICD.Chapter` as icd_chapter, State, Deaths,Population,power(10,5)*(Deaths/Population) as crude_rate
from cdc
where year in ('2010')
group by `ICD.Chapter`, State
) group by 1,2, 3")
ggplot(cdc1, aes(fill=icd_chapter, y=crude_rate, x=State)) +
labs(x="State", y="Crude Death Rate per 100,000 Persons") +
geom_bar(stat="identity") +
coord_flip()
ui <- fluidPage(
sidebarPanel(
selectInput(inputId = "CauseDeath", label = "Cause of Death:",
choices = levels(as.factor(cdc1$icd_chapter))
),
helpText("States by crude mortality for each cause of death."),
width = "auto"
),
plotOutput("plot1")
)
server<- function(input, output) {
output$plot1 <-renderPlot({
SelectedCause <- input$CauseDeath
ggplot(data=cdc1[cdc1$icd_chapter == SelectedCause,]
, aes(x = State, y = crude_rate)) +
labs(x="State", y="Crude Death Rate",
title = "Crude death rate per 100,000 persons",
subtitle = paste("Caused by", SelectedCause)) +
geom_bar(stat="identity", fill="steelblue") +
geom_hline(aes(yintercept = mean(crude_rate, na.rm = TRUE), linetype = "National Average"), col="red", lwd=1) +
scale_linetype(name = NULL) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
#deployApp()
cdc2 <- cdc %>%
group_by(Year, ICD.Chapter) %>%
mutate(N.Population = sum(Population),
N.Count = sum(Deaths),
N.Crude.Rate = 10^5*(N.Count/N.Population)) %>%
group_by(Year, ICD.Chapter, State) %>%
mutate(S.Count=sum(Deaths),
S.Crude.Rate=10^5*(S.Count/Population)) %>%
select(ICD.Chapter, State, Year, N.Crude.Rate, S.Crude.Rate)
cdc2b<-sqldf("select
'ICD.Chapter' as icd_chapter,
State as state,
Year as year,
'N.Crude.Rate' as national_crude_rate,
'S.Crude.Rate' as state_crude_rate
from cdc2")
head(cdc2b,10);
ggplot(data=cdc2b, aes(x=year, y=state_crude_rate)) +
labs(x="Year", y="Crude Death Rate per 100,000 Person") +
geom_bar(stat="identity", fill="steelblue") +
geom_line(aes(x=year, y=national_crude_rate), col="red", lwd=1)
cdc2 <- cdc %>%
group_by(Year, ICD.Chapter) %>%
mutate(N.Population = sum(Population),
N.Count = sum(Deaths),
N.Crude.Rate = 10^5*(N.Count/N.Population)) %>%
group_by(Year, ICD.Chapter, State) %>%
mutate(S.Count=sum(Deaths),
S.Crude.Rate=10^5*(S.Count/Population)) %>%
select(ICD.Chapter, State, Year, N.Crude.Rate, S.Crude.Rate)
cdc2b<-sqldf("select
'ICD.Chapter' as icd_chapter,
State as state,
Year as year,
'N.Crude.Rate' as national_crude_rate,
'S.Crude.Rate' as state_crude_rate
from cdc2")
head(cdc2b,10);
ggplot(data=cdc2b, aes(x=year, y=state_crude_rate)) +
labs(x="Year", y="Crude Death Rate per 100,000 Person") +
geom_bar(stat="identity", fill="steelblue") +
geom_line(aes(x=year, y=national_crude_rate), col="red", lwd=1)
ui <- fluidPage(
sidebarPanel(
selectInput(inputId = "CauseDeath", label = "Cause of Death:",
choices = levels(as.factor(cdc2$ICD.Chapter))
),
selectInput(inputId = "State", label = "State selected:",
choices = levels(as.factor(cdc2$State))
),
helpText("Annual Crude mortality rates at State level."),
width = "auto"
),
plotOutput("plot2")
)
server<- function(input, output) {
output$plot2 <-renderPlot({
SelectedCause <- input$CauseDeath
SelectedState <- input$State
ggplot(cdc2[cdc2$State == SelectedState & cdc2$ICD.Chapter == SelectedCause,]) +
geom_bar(aes(x = Year, weight = S.Crude.Rate), fill = "steelblue") +
labs(x="State", y = "Crude Death Rate",
title = "Crude death rate per 100,000 persons",
subtitle = paste("Caused by", SelectedCause, "in", SelectedState)) +
geom_line(aes(x = Year, y = N.Crude.Rate, linetype = "National Average"), col = "red", lwd = 1) +
scale_linetype(name = NULL) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
cdc2 <- cdc %>%
group_by(Year, ICD.Chapter) %>%
mutate(N.Population = sum(Population),
N.Count = sum(Deaths),
N.Crude.Rate = 10^5*(N.Count/N.Population)) %>%
group_by(Year, ICD.Chapter, State) %>%
mutate(S.Count=sum(Deaths),
S.Crude.Rate=10^5*(S.Count/Population)) %>%
select(ICD.Chapter, State, Year, N.Crude.Rate, S.Crude.Rate)
cdc2b<-sqldf("select
'ICD.Chapter' as icd_chapter,
State as state,
Year as year,
'N.Crude.Rate' as national_crude_rate,
'S.Crude.Rate' as state_crude_rate
from cdc2")
head(cdc2b,10);
ggplot(data=cdc2b, aes(x=year, y=state_crude_rate)) +
labs(x="Year", y="Crude Death Rate per 100,000 Person") +
geom_bar(stat="identity", fill="steelblue") +
geom_line(aes(x=year, y=national_crude_rate), col="red", lwd=1)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(dplyr)
library(tidyr)
library(ggplot2)
library(tibble)
cdc_url <- "https://raw.githubusercontent.com/charleyferrari/CUNY_DATA608/master/lecture3/data/cleaned-cdc-mortality-1999-2010-2.csv"
cdc <- read.csv(cdc_url, header= TRUE, stringsAsFactors=TRUE)
#change population back into a numeric
cdc$Population <- as.numeric(cdc$Population)
# summarizing data
head(cdc)
summary(cdc)
library(sqldf)
library(ggplot2)
library(rsconnect)
cdc1<-sqldf("
select
icd_chapter, State, crude_rate
from
(
select
`ICD.Chapter` as icd_chapter, State, Deaths,Population,power(10,5)*(Deaths/Population) as crude_rate
from cdc
where year in ('2010')
group by `ICD.Chapter`, State
) group by 1,2, 3")
ggplot(cdc1, aes(fill=icd_chapter, y=crude_rate, x=State)) +
labs(x="State", y="Crude Death Rate per 100,000 Persons") +
geom_bar(stat="identity") +
coord_flip()
library(sqldf)
library(ggplot2)
library(rsconnect)
cdc1<-sqldf("
select
icd_chapter, State, crude_rate
from
(
select
`ICD.Chapter` as icd_chapter, State, Deaths,Population,power(10,5)*(Deaths/Population) as crude_rate
from cdc
where year in ('2010')
group by `ICD.Chapter`, State
) group by 1,2, 3")
ggplot(cdc1, aes(fill=icd_chapter, y=crude_rate, x=State)) +
labs(x="State", y="Crude Death Rate per 100,000 Persons") +
geom_bar(stat="identity") +
coord_flip()
library(shiny)
library(dplyr)
library(tidyr)
library(ggplot2)
library(tibble)
rsconnect::setAccountInfo(name='vijay-564',
token='20735163BD1BDFEF6D2CE063989635CE',
secret='46r6am8928lFkYap7RN7doZj7dm6XwtLWVcf0mjW')
cdc_url <- "https://raw.githubusercontent.com/charleyferrari/CUNY_DATA608/master/lecture3/data/cleaned-cdc-mortality-1999-2010-2.csv"
cdc <- read.csv(cdc_url, header= TRUE, stringsAsFactors=TRUE)
#change population back into a numeric
cdc$Population <- as.numeric(cdc$Population)
# summarizing data
head(cdc)
summary(cdc)
library(sqldf)
library(ggplot2)
library(rsconnect)
cdc1<-sqldf("
select
icd_chapter, State, crude_rate
from
(
select
`ICD.Chapter` as icd_chapter, State, Deaths,Population,power(10,5)*(Deaths/Population) as crude_rate
from cdc
where year in ('2010')
group by `ICD.Chapter`, State
) group by 1,2, 3")
ggplot(cdc1, aes(fill=icd_chapter, y=crude_rate, x=State)) +
labs(x="State", y="Crude Death Rate per 100,000 Persons") +
geom_bar(stat="identity") +
coord_flip()
ui <- fluidPage(
sidebarPanel(
selectInput(inputId = "CauseDeath", label = "Cause of Death:",
choices = levels(as.factor(cdc1$icd_chapter))
),
helpText("States by crude mortality for each cause of death."),
width = "auto"
),
plotOutput("plot1")
)
server<- function(input, output) {
output$plot1 <-renderPlot({
SelectedCause <- input$CauseDeath
ggplot(data=cdc1[cdc1$icd_chapter == SelectedCause,]
, aes(x = State, y = crude_rate)) +
labs(x="State", y="Crude Death Rate",
title = "Crude death rate per 100,000 persons",
subtitle = paste("Caused by", SelectedCause)) +
geom_bar(stat="identity", fill="steelblue") +
geom_hline(aes(yintercept = mean(crude_rate, na.rm = TRUE), linetype = "National Average"), col="red", lwd=1) +
scale_linetype(name = NULL) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
#deployApp()
cdc2 <- cdc %>%
group_by(Year, ICD.Chapter) %>%
mutate(N.Population = sum(Population),
N.Count = sum(Deaths),
N.Crude.Rate = 10^5*(N.Count/N.Population)) %>%
group_by(Year, ICD.Chapter, State) %>%
mutate(S.Count=sum(Deaths),
S.Crude.Rate=10^5*(S.Count/Population)) %>%
select(ICD.Chapter, State, Year, N.Crude.Rate, S.Crude.Rate)
cdc2b<-sqldf("select
'ICD.Chapter' as icd_chapter,
State as state,
Year as year,
'N.Crude.Rate' as national_crude_rate,
'S.Crude.Rate' as state_crude_rate
from cdc2")
head(cdc2b,10);
ggplot(data=cdc2b, aes(x=year, y=state_crude_rate)) +
labs(x="Year", y="Crude Death Rate per 100,000 Person") +
geom_bar(stat="identity", fill="steelblue") +
geom_line(aes(x=year, y=national_crude_rate), col="red", lwd=1)
ui <- fluidPage(
sidebarPanel(
selectInput(inputId = "CauseDeath", label = "Cause of Death:",
choices = levels(as.factor(cdc2$ICD.Chapter))
),
selectInput(inputId = "State", label = "State selected:",
choices = levels(as.factor(cdc2$State))
),
helpText("Annual Crude mortality rates at State level."),
width = "auto"
),
plotOutput("plot2")
)
server<- function(input, output) {
output$plot2 <-renderPlot({
SelectedCause <- input$CauseDeath
SelectedState <- input$State
ggplot(cdc2[cdc2$State == SelectedState & cdc2$ICD.Chapter == SelectedCause,]) +
geom_bar(aes(x = Year, weight = S.Crude.Rate), fill = "steelblue") +
labs(x="State", y = "Crude Death Rate",
title = "Crude death rate per 100,000 persons",
subtitle = paste("Caused by", SelectedCause, "in", SelectedState)) +
geom_line(aes(x = Year, y = N.Crude.Rate, linetype = "National Average"), col = "red", lwd = 1) +
scale_linetype(name = NULL) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
sidebarPanel(
selectInput(inputId = "CauseDeath", label = "Cause of Death:",
choices = levels(as.factor(cdc1$icd_chapter))
),
helpText("States by crude mortality for each cause of death."),
width = "auto"
),
plotOutput("plot1")
)
server<- function(input, output) {
output$plot1 <-renderPlot({
SelectedCause <- input$CauseDeath
ggplot(data=cdc1[cdc1$icd_chapter == SelectedCause,]
, aes(x = State, y = crude_rate)) +
labs(x="State", y="Crude Death Rate",
title = "Crude death rate per 100,000 persons",
subtitle = paste("Caused by", SelectedCause)) +
geom_bar(stat="identity", fill="steelblue") +
geom_hline(aes(yintercept = mean(crude_rate, na.rm = TRUE), linetype = "National Average"), col="red", lwd=1) +
scale_linetype(name = NULL) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
deployApp()
ui <- fluidPage(
sidebarPanel(
selectInput(inputId = "CauseDeath", label = "Cause of Death:",
choices = levels(as.factor(cdc1$icd_chapter))
),
helpText("States by crude mortality for each cause of death."),
width = "auto"
),
plotOutput("plot1")
)
server<- function(input, output) {
output$plot1 <-renderPlot({
SelectedCause <- input$CauseDeath
ggplot(data=cdc1[cdc1$icd_chapter == SelectedCause,]
, aes(x = State, y = crude_rate)) +
labs(x="State", y="Crude Death Rate",
title = "Crude death rate per 100,000 persons",
subtitle = paste("Caused by", SelectedCause)) +
geom_bar(stat="identity", fill="steelblue") +
geom_hline(aes(yintercept = mean(crude_rate, na.rm = TRUE), linetype = "National Average"), col="red", lwd=1) +
scale_linetype(name = NULL) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
deployApp(vijay-564,server)
devtools::install_github("rstudio/shinyapps")
ui <- fluidPage(
sidebarPanel(
selectInput(inputId = "CauseDeath", label = "Cause of Death:",
choices = levels(as.factor(cdc1$icd_chapter))
),
helpText("States by crude mortality for each cause of death."),
width = "auto"
),
plotOutput("plot1")
)
server<- function(input, output) {
output$plot1 <-renderPlot({
SelectedCause <- input$CauseDeath
ggplot(data=cdc1[cdc1$icd_chapter == SelectedCause,]
, aes(x = State, y = crude_rate)) +
labs(x="State", y="Crude Death Rate",
title = "Crude death rate per 100,000 persons",
subtitle = paste("Caused by", SelectedCause)) +
geom_bar(stat="identity", fill="steelblue") +
geom_hline(aes(yintercept = mean(crude_rate, na.rm = TRUE), linetype = "National Average"), col="red", lwd=1) +
scale_linetype(name = NULL) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
rsconnect::deployApp
ui <- fluidPage(
sidebarPanel(
selectInput(inputId = "CauseDeath", label = "Cause of Death:",
choices = levels(as.factor(cdc1$icd_chapter))
),
helpText("States by crude mortality for each cause of death."),
width = "auto"
),
plotOutput("plot1")
)
server<- function(input, output) {
output$plot1 <-renderPlot({
SelectedCause <- input$CauseDeath
ggplot(data=cdc1[cdc1$icd_chapter == SelectedCause,]
, aes(x = State, y = crude_rate)) +
labs(x="State", y="Crude Death Rate",
title = "Crude death rate per 100,000 persons",
subtitle = paste("Caused by", SelectedCause)) +
geom_bar(stat="identity", fill="steelblue") +
geom_hline(aes(yintercept = mean(crude_rate, na.rm = TRUE), linetype = "National Average"), col="red", lwd=1) +
scale_linetype(name = NULL) +
theme_bw()
})
}
shinyApp(ui = ui, server = server)
rsconnect::deployApp()
runApp('vijay-564')
runApp('HW3')
runApp('HW3')
runApp('HW3')
